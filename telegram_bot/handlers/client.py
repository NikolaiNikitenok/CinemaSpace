from aiogram import types, Dispatcher
from create_bot import dp, bot
from data_base import sqlite_db

import keyboards.client_kb as nav
# --------------------------------------------------------------------------

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–∞

mainTEXT = '–ü—Ä–∏–≤–µ—Ç!üëã –Ø CinemaSpace - –ë–æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ "–ö–∏–Ω–æ–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ".üé•\n\n \
üõã –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª –ø–æ —Ç–≤–æ–∏–º –≤–∫—É—Å–∞–º!\n\n \
üåÉ –¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º—ã –Ω–∞ –≤–µ—á–µ—Ä –∏–ª–∏ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ, \n \
–¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–¥–Ω–æ–º—É, –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π –∏–ª–∏ —Å–µ–º—å–∏!\n\n \
üåü –ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±–∏–º—ã–µ –∂–∞–Ω—Ä—ã –∏ —Ñ–∏–ª—å–º—ã –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π.\n\n \
üìî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º –ø–æ –∫–æ–¥—É, –ø–æ—Å–º–æ—Ç—Ä–µ–≤ –æ—Ç—Ä–µ–∑–æ–∫ –≤ –¢–∏–∫-–¢–æ–∫.\n\n \
üé≤ –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!'

CodeTEXT = '–¢–µ–∫—Å—Ç'

VIPTEXT = ''

RandomTEXT = ''

MyTEXT = ''

LinkTEXT = ''

SettingsTEXT = ''

StarTEXT = ''




# --------------------------------------------------------------------------
# @dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    try:
        await bot.send_message(message.from_user.id, text=mainTEXT, reply_markup=nav.mainMenu)
        await message.delete()
    except:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É: \nhttp://t.me/CinemaSpaceSearch_bot')


# @dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await bot.send_message(message.from_user.id,
                           '–¢—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏: \n /start - "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"\n /help - "–ü–æ–º–æ—â—å" \n \
                           /films - "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"')


# @dp.message_handler(commands=['films'])
async def films_command(message: types.Message):
    await sqlite_db.sql_read(message)


# ------------------------------------------------


@dp.callback_query_handler(text="btnVIP")
async def vip(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, '–ö—É–ø–∏ –í–ò–ü –ø–æ–¥–ø–∏—Å–∫—É!', reply_markup=nav.VIP)


@dp.callback_query_handler(text="btnVIPMore")
async def vipmore(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, '–¢—ã –ø–æ–ª—É—á–∏—à—å –≤ –í–ò–ü –ø–æ–¥–ø–∏—Å–∫–µ:', reply_markup=nav.VIPMore)


@dp.callback_query_handler(text="btnBackVIPMore")
async def backvipmore(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, '–ö—É–ø–∏ –í–ò–ü –ø–æ–¥–ø–∏—Å–∫—É!', reply_markup=nav.VIP)


@dp.callback_query_handler(text="btnBackVIP")
async def backvip(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, text=mainTEXT, reply_markup=nav.mainMenu)


@dp.callback_query_handler(text="btnLink")
async def link(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, '–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –°–æ—Ü. —Å–µ—Ç–∏:', reply_markup=nav.Link)


@dp.callback_query_handler(text="btnBackLink")
async def backlink(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, text=mainTEXT, reply_markup=nav.mainMenu)

@dp.callback_query_handler(text="btnCode")
async def code(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, text=CodeTEXT, reply_markup=nav.Code)

#@dp.callback_query_handler(text="btnCodeSearch")

@dp.callback_query_handler(text="btnBackCode")
async def backcode(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message.message_id)
    await bot.send_message(message.from_user.id, text=mainTEXT, reply_markup=nav.mainMenu)


# ----------------------------------------------

def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(films_command, commands=['films'])
    dp.register_message_handler(command_start, commands=['start'])
    dp.register_message_handler(help_command, commands=['help'])
